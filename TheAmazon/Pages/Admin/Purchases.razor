
@page "/admin/purchases"
@inherits OwningComponentBase<IPurchasheRepository>


<OrderTable TableTitle="Uncollected Orders" Purchases="UncollectedPurchases"
               ButtonLabel="Collected" PurchaseSelected="CollectPurchase"></OrderTable>

<OrderTable TableTitle="Collected Orders" Purchases="CollectedPurchases"
            ButtonLabel="Reset" PurchaseSelected="ResetPurchase"></OrderTable>

<button class="btn btn-info" @onclick="@(x => UpdateData())">Refresh</button>

@code {

    public IPurchasheRepository repo => Service;

    public IEnumerable<Purchase> AllPurchases { get; set; }
    public IEnumerable<Purchase> UncollectedPurchases { get; set; }
    public IEnumerable<Purchase> CollectedPurchases { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
    }

    public async Task UpdateData()
    {
        AllPurchases = await repo.Purchases.ToListAsync();
        UncollectedPurchases = AllPurchases.Where(x => !x.Received);
        CollectedPurchases = AllPurchases.Where(x => x.Received);

    }

    public void CollectPurchase(int id) => UpdatePurchase(id, true);
    public void ResetPurchase(int id) => UpdatePurchase(id, false);

    private void UpdatePurchase (int id, bool collected)
    {
        Purchase p = repo.Purchases.FirstOrDefault(x => x.PurchaseID == id);
        p.Received = collected;
        repo.SavePurchase(p);
    }

}